import heapq
from collections import defaultdict

def huffman_encoding(freq_dict):
    heap = [[wt, [sym, ""]] for sym, wt in freq_dict.items()]
    heapq.heapify(heap)
    while len(heap) > 1:
        lo = heapq.heappop(heap)
        hi = heapq.heappop(heap)
        for pair in lo[1:]:
            pair[1] = '0' + pair[1]
        for pair in hi[1:]:
            pair[1] = '1' + pair[1]
        heapq.heappush(heap, [lo[0] + hi[0]] + lo[1:] + hi[1:])
    return dict(sorted(heapq.heappop(heap)[1:], key=lambda p: (len(p[-1]), p)))

def huffman_encoding_driver():
    # 입력받은 빈도수
    freq_dict = {}
    for i in range(1, 129):
        freq_dict[chr(i)] = int(input(f"Enter frequency for ASCII code {i}: "))

    # 허프만 인코딩
    huffman_dict = huffman_encoding(freq_dict)

    # 결과 출력
    print("Encoding for each ASCII character:")
    for key, value in huffman_dict.items():
        print(f"{key}: {value}")

huffman_encoding_driver()